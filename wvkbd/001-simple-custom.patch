diff --git a/layout.mobintl.h b/layout.mobintl.h
index a848a04..bd91187 100644
--- a/layout.mobintl.h
+++ b/layout.mobintl.h
@@ -15,6 +15,8 @@ enum layout_id {
 	Special,
 	SpecialPad,
 	Simple,
+	SimpleCustom,
+	SpecialCustom,
 	Dialer,
 	Cyrillic,
 	Arabic,
@@ -69,6 +71,7 @@ enum layout_id {
 };
 
 static struct key keys_full[], keys_full_wide[], keys_special[], keys_specialpad[], keys_simple[],
+  keys_simple_custom[], keys_special_custom[],
   keys_cyrillic[], keys_arabic[], keys_persian[], keys_georgian[], keys_greek[], keys_hebrew[],
   keys_emoji[], keys_nav[], keys_landscape[], keys_landscape_special[], keys_compose_a[],
   keys_compose_e[], keys_compose_y[], keys_compose_u[], keys_compose_i[],
@@ -91,6 +94,8 @@ static struct layout layouts[NumLayouts] = {
   [Special] = {keys_special, "latin", "special", false},
   [SpecialPad] = {keys_specialpad, "latin", "specialpad", false},
   [Simple] = {keys_simple, "latin", "simple", true},
+  [SimpleCustom] = {keys_simple_custom, "latin", "simple_custom"},
+  [SpecialCustom] = {keys_special_custom, "latin", "special_custom"},
   [Cyrillic] = {keys_cyrillic, "cyrillic", "cyrillic", true},
   [Dialer] = {keys_dialer, "latin", "dialer", false},
   [Arabic] = {keys_arabic, "arabic", "arabic", true},
@@ -479,6 +484,113 @@ static struct key keys_simple[] = {
   {"", "", 0.0, Last},
 };
 
+static struct key keys_simple_custom[] = {
+  {"q", "Q", 1.0, Code, KEY_Q, &layouts[Emoji]},
+  {"w", "W", 1.0, Code, KEY_W, &layouts[ComposeW]},
+  {"e", "E", 1.0, Code, KEY_E, &layouts[ComposeE]},
+  {"r", "R", 1.0, Code, KEY_R, &layouts[ComposeR]},
+  {"t", "T", 1.0, Code, KEY_T, &layouts[ComposeT]},
+  {"y", "Y", 1.0, Code, KEY_Y, &layouts[ComposeY]},
+  {"u", "U", 1.0, Code, KEY_U, &layouts[ComposeU]},
+  {"i", "I", 1.0, Code, KEY_I, &layouts[ComposeI]},
+  {"o", "O", 1.0, Code, KEY_O, &layouts[ComposeO]},
+  {"p", "P", 1.0, Code, KEY_P, &layouts[ComposeP]},
+  {"", "", 0.0, EndRow},
+
+  {"", "", 0.5, Pad},
+  {"a", "A", 1.0, Code, KEY_A, &layouts[ComposeA]},
+  {"s", "S", 1.0, Code, KEY_S, &layouts[ComposeS]},
+  {"d", "D", 1.0, Code, KEY_D, &layouts[ComposeD]},
+  {"f", "F", 1.0, Code, KEY_F, &layouts[ComposeF]},
+  {"g", "G", 1.0, Code, KEY_G, &layouts[ComposeG]},
+  {"h", "H", 1.0, Code, KEY_H, &layouts[ComposeH]},
+  {"j", "J", 1.0, Code, KEY_J, &layouts[ComposeJ]},
+  {"k", "K", 1.0, Code, KEY_K, &layouts[ComposeK]},
+  {"l", "L", 1.0, Code, KEY_L, &layouts[ComposeL]},
+  {"", "", 0.5, Pad},
+  {"", "", 0.0, EndRow},
+
+  {"⇧", "⇫", 1.5, Mod, Shift, .scheme = 1},
+  {"z", "Z", 1.0, Code, KEY_Z, &layouts[ComposeZ]},
+  {"x", "X", 1.0, Code, KEY_X, &layouts[ComposeX]},
+  {"c", "C", 1.0, Code, KEY_C, &layouts[ComposeC]},
+  {"v", "V", 1.0, Code, KEY_V, &layouts[ComposeV]},
+  {"b", "B", 1.0, Code, KEY_B, &layouts[ComposeB]},
+  {"n", "N", 1.0, Code, KEY_N, &layouts[ComposeN]},
+  {"m", "M", 1.0, Code, KEY_M, &layouts[ComposeM]},
+  {"⌫", "⌫", 1.5, Code, KEY_BACKSPACE, .scheme = 1},
+  {"", "", 0.0, EndRow},
+
+  {"Abc", "Abc", 2.5, NextLayer, .scheme = 1},
+  {"", "", 4.8, Code, KEY_SPACE},
+  {".", "?", 1.0, Code, KEY_DOT},
+  {"Enter", "Enter", 1.7, Code, KEY_ENTER, .scheme = 1},
+  {"", "", 0.0, EndRow},
+  
+  {"Esc", "Esc", 1.0, Code, KEY_ESC},
+  {"Tab", "Tab", 2.0, Code, KEY_TAB, .scheme = 1},
+  {"Ctr", "Ctr", 2.0, Mod, Ctrl, .scheme = 1},
+  {"Sup", "Sup", 2.0, Mod, Super, .scheme = 1},
+  {"Alt", "Alt", 2.0, Mod, Alt, .scheme = 1},
+  {"Caps", "Caps", 1.0, Mod, CapsLock, .scheme = 1},
+
+  /* end of layout */
+  {"", "", 0.0, Last},
+};
+
+static struct key keys_special_custom[] = {
+  {"1", "!", 1.0, Code, KEY_1},
+  {"2", "@", 1.0, Code, KEY_2},
+  {"3", "#", 1.0, Code, KEY_3},
+  {"4", "$", 1.0, Code, KEY_4},
+  {"5", "%", 1.0, Code, KEY_5},
+  {"6", "^", 1.0, Code, KEY_6},
+  {"7", "&", 1.0, Code, KEY_7},
+  {"8", "*", 1.0, Code, KEY_8},
+  {"9", "(", 1.0, Code, KEY_9},
+  {"0", ")", 1.0, Code, KEY_0},
+  {"", "", 0.0, EndRow},
+  
+  {"`", "~", 1.0, Code, KEY_GRAVE},
+  {"'", "\"", 1.0, Code, KEY_APOSTROPHE},
+  {"-", "_", 1.0, Code, KEY_MINUS},
+  {"=", "+", 1.0, Code, KEY_EQUAL},
+  {"[", "{", 1.0, Code, KEY_LEFTBRACE},
+  {"]", "}", 1.0, Code, KEY_RIGHTBRACE},
+  {"\\", "|", 1.0, Code, KEY_BACKSLASH},
+  {";", ":", 1.0, Code, KEY_SEMICOLON},
+  {"/", ">", 1.0, Code, KEY_SLASH},
+  {"¡", "¿", 1.0, Code, KEY_MENU},
+  {"", "", 0.0, EndRow},
+
+  {"⇧", "⇫", 1.5, Mod, Shift, .scheme = 1},
+  {"<", "«", 1.0, Code, KEY_COMMA, 0, AltGr},
+  {">", "»", 1.0, Code, KEY_DOT, 0, AltGr},
+  {"⌫", "⌫", 1.0, Code, KEY_BACKSPACE, .scheme = 1},
+  {",", "'", 1.0, Code, KEY_COMMA},
+  {".", "?", 1.0, Code, KEY_DOT},
+  {"+","+", 1.0, Code, KEY_KPPLUS},
+  {"↑", "↑", 1.0, Code, KEY_UP, .scheme = 1},
+  {"⌫", "⌫", 1.5, Code, KEY_BACKSPACE, .scheme = 1},
+  {"", "", 0.0, EndRow},
+
+  {"Abc", "Abc", 2.5, NextLayer, .scheme = 1},
+  {"", "", 4.8, Code, KEY_SPACE},
+  {".", "?", 1.0, Code, KEY_DOT},
+  {"Enter", "Enter", 1.7, Code, KEY_ENTER, .scheme = 1},
+  {"", "", 0.0, EndRow},
+  
+  {"Esc", "Esc", 1.0, Code, KEY_ESC},
+  {"Tab", "Tab", 2.0, Code, KEY_TAB, .scheme = 1},
+  {"Ctr", "Ctr", 2.0, Mod, Ctrl, .scheme = 1},
+  {"Sup", "Sup", 2.0, Mod, Super, .scheme = 1},
+  {"Alt", "Alt", 2.0, Mod, Alt, .scheme = 1},
+  {"Caps", "Caps", 1.0, Mod, CapsLock, .scheme = 1},
+
+  /* end of layout */
+  {"", "", 0.0, Last},
+};
+
 static struct key keys_dialer[] = {
   {"Esc", "Esc", 1.0, Code, KEY_ESC},
   {"+","+", 1.0, Code, KEY_KPPLUS},
